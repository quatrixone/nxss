name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-server:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd server
        npm ci
    
    - name: Run server tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test

  test-flutter:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        cd clients/flutter
        flutter pub get
    
    - name: Run Flutter tests
      run: |
        cd clients/flutter
        flutter test
    
    - name: Analyze Flutter code
      run: |
        cd clients/flutter
        flutter analyze

  build-flutter:
    runs-on: ubuntu-latest
    needs: [test-server, test-flutter]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        cd clients/flutter
        flutter pub get
    
    - name: Build Linux app
      run: |
        cd clients/flutter
        flutter build linux --release
    
    - name: Build APK
      run: |
        cd clients/flutter
        flutter build apk --release

  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        cd server
        docker build -t nxss-server:latest .
    
    - name: Test Docker image
      run: |
        cd server
        docker run --rm -d -p 8080:8080 --name nxss-test nxss-server:latest
        sleep 10
        curl -f http://localhost:8080/settings || exit 1
        docker stop nxss-test
